// Code generated by protoc-gen-go.
// source: transaction.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TransactionType int32

const (
	TransactionType_Issue           TransactionType = 0
	TransactionType_IssueUpdate     TransactionType = 1
	TransactionType_Atomic          TransactionType = 2
	TransactionType_JSContractInit  TransactionType = 3
	TransactionType_LuaContractInit TransactionType = 4
	TransactionType_ContractInvoke  TransactionType = 5
	TransactionType_ContractQuery   TransactionType = 6
)

var TransactionType_name = map[int32]string{
	0: "Issue",
	1: "IssueUpdate",
	2: "Atomic",
	3: "JSContractInit",
	4: "LuaContractInit",
	5: "ContractInvoke",
	6: "ContractQuery",
}
var TransactionType_value = map[string]int32{
	"Issue":           0,
	"IssueUpdate":     1,
	"Atomic":          2,
	"JSContractInit":  3,
	"LuaContractInit": 4,
	"ContractInvoke":  5,
	"ContractQuery":   6,
}

func (x TransactionType) String() string {
	return proto1.EnumName(TransactionType_name, int32(x))
}
func (TransactionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type OutPoint struct {
	TxHash []byte `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Index  uint32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
}

func (m *OutPoint) Reset()                    { *m = OutPoint{} }
func (m *OutPoint) String() string            { return proto1.CompactTextString(m) }
func (*OutPoint) ProtoMessage()               {}
func (*OutPoint) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *OutPoint) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *OutPoint) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type TxIn struct {
	PreviousOutPoint *OutPoint `protobuf:"bytes,1,opt,name=previousOutPoint" json:"previousOutPoint,omitempty"`
	TxWitness        []byte    `protobuf:"bytes,2,opt,name=txWitness,proto3" json:"txWitness,omitempty"`
}

func (m *TxIn) Reset()                    { *m = TxIn{} }
func (m *TxIn) String() string            { return proto1.CompactTextString(m) }
func (*TxIn) ProtoMessage()               {}
func (*TxIn) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *TxIn) GetPreviousOutPoint() *OutPoint {
	if m != nil {
		return m.PreviousOutPoint
	}
	return nil
}

func (m *TxIn) GetTxWitness() []byte {
	if m != nil {
		return m.TxWitness
	}
	return nil
}

type TxOut struct {
	Asset   uint32 `protobuf:"varint,1,opt,name=asset" json:"asset,omitempty"`
	Value   int64  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Address []byte `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *TxOut) Reset()                    { *m = TxOut{} }
func (m *TxOut) String() string            { return proto1.CompactTextString(m) }
func (*TxOut) ProtoMessage()               {}
func (*TxOut) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *TxOut) GetAsset() uint32 {
	if m != nil {
		return m.Asset
	}
	return 0
}

func (m *TxOut) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TxOut) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type ContractSpec struct {
	Addr   []byte   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Code   []byte   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Params []string `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
}

func (m *ContractSpec) Reset()                    { *m = ContractSpec{} }
func (m *ContractSpec) String() string            { return proto1.CompactTextString(m) }
func (*ContractSpec) ProtoMessage()               {}
func (*ContractSpec) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ContractSpec) GetAddr() []byte {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *ContractSpec) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ContractSpec) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

type TxHeader struct {
	Version    uint32          `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	CreateTime uint32          `protobuf:"varint,2,opt,name=createTime" json:"createTime,omitempty"`
	Nonce      uint32          `protobuf:"varint,3,opt,name=nonce" json:"nonce,omitempty"`
	Type       TransactionType `protobuf:"varint,4,opt,name=type,enum=proto.TransactionType" json:"type,omitempty"`
}

func (m *TxHeader) Reset()                    { *m = TxHeader{} }
func (m *TxHeader) String() string            { return proto1.CompactTextString(m) }
func (*TxHeader) ProtoMessage()               {}
func (*TxHeader) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *TxHeader) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TxHeader) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *TxHeader) GetNonce() uint32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TxHeader) GetType() TransactionType {
	if m != nil {
		return m.Type
	}
	return TransactionType_Issue
}

type Transaction struct {
	Header       *TxHeader     `protobuf:"bytes,1,opt,name=Header" json:"Header,omitempty"`
	Inputs       []*TxIn       `protobuf:"bytes,2,rep,name=inputs" json:"inputs,omitempty"`
	Outputs      []*TxOut      `protobuf:"bytes,3,rep,name=outputs" json:"outputs,omitempty"`
	ContractSpec *ContractSpec `protobuf:"bytes,4,opt,name=contractSpec" json:"contractSpec,omitempty"`
	Payload      []byte        `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto1.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *Transaction) GetHeader() *TxHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Transaction) GetInputs() []*TxIn {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Transaction) GetOutputs() []*TxOut {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Transaction) GetContractSpec() *ContractSpec {
	if m != nil {
		return m.ContractSpec
	}
	return nil
}

func (m *Transaction) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto1.RegisterType((*OutPoint)(nil), "proto.OutPoint")
	proto1.RegisterType((*TxIn)(nil), "proto.TxIn")
	proto1.RegisterType((*TxOut)(nil), "proto.TxOut")
	proto1.RegisterType((*ContractSpec)(nil), "proto.ContractSpec")
	proto1.RegisterType((*TxHeader)(nil), "proto.TxHeader")
	proto1.RegisterType((*Transaction)(nil), "proto.Transaction")
	proto1.RegisterEnum("proto.TransactionType", TransactionType_name, TransactionType_value)
}

func init() { proto1.RegisterFile("transaction.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0xc1, 0x6e, 0xd3, 0x40,
	0x14, 0xc4, 0x75, 0xec, 0x36, 0xcf, 0x49, 0xe3, 0xbe, 0xa2, 0x2a, 0x07, 0x84, 0x22, 0x23, 0x81,
	0xd5, 0x43, 0x0f, 0xe1, 0x00, 0x12, 0x27, 0xc4, 0xa5, 0x41, 0x40, 0x60, 0x6b, 0xc4, 0x79, 0xb1,
	0x9f, 0x84, 0x45, 0xb3, 0x6b, 0x79, 0x77, 0x23, 0xe7, 0x07, 0x90, 0xf8, 0x41, 0xbe, 0x07, 0xed,
	0x7a, 0xdd, 0xa4, 0xed, 0xc9, 0x3b, 0xf3, 0xc6, 0xb3, 0xf3, 0x66, 0xe1, 0x4c, 0xb7, 0x5c, 0x28,
	0x5e, 0xea, 0x5a, 0x8a, 0xab, 0xa6, 0x95, 0x5a, 0x62, 0xe4, 0x3e, 0xd9, 0x5b, 0x38, 0x59, 0x1b,
	0xfd, 0x55, 0xd6, 0x42, 0xe3, 0x05, 0xc4, 0xba, 0xbb, 0xe6, 0xea, 0xd7, 0x3c, 0x58, 0x04, 0xf9,
	0x84, 0x79, 0x84, 0x4f, 0x21, 0xaa, 0x45, 0x45, 0xdd, 0xfc, 0x68, 0x11, 0xe4, 0x53, 0xd6, 0x83,
	0x8c, 0xc3, 0xa8, 0xe8, 0x56, 0x02, 0xdf, 0x41, 0xda, 0xb4, 0xb4, 0xad, 0xa5, 0x51, 0x83, 0x93,
	0xfb, 0x3f, 0x59, 0xce, 0xfa, 0xab, 0xae, 0x06, 0x9a, 0x3d, 0x12, 0xe2, 0x33, 0x18, 0xeb, 0xee,
	0x47, 0xad, 0x05, 0x29, 0xe5, 0xec, 0x27, 0x6c, 0x4f, 0x64, 0x9f, 0x21, 0x2a, 0xba, 0xb5, 0xd1,
	0x36, 0x01, 0x57, 0x8a, 0x7a, 0xe3, 0x29, 0xeb, 0x81, 0x65, 0xb7, 0xfc, 0xd6, 0x90, 0xfb, 0x31,
	0x64, 0x3d, 0xc0, 0x39, 0x1c, 0xf3, 0xaa, 0x6a, 0xad, 0x61, 0xe8, 0x0c, 0x07, 0x98, 0x7d, 0x81,
	0xc9, 0x07, 0x29, 0x74, 0xcb, 0x4b, 0x7d, 0xd3, 0x50, 0x89, 0x08, 0x23, 0x3b, 0xf2, 0xdb, 0xba,
	0xb3, 0xe5, 0x4a, 0x59, 0x91, 0xcf, 0xe2, 0xce, 0xb6, 0x97, 0x86, 0xb7, 0x7c, 0x63, 0x0d, 0xc3,
	0x7c, 0xcc, 0x3c, 0xca, 0xfe, 0x04, 0x70, 0x52, 0x74, 0xd7, 0xc4, 0x2b, 0x6a, 0xed, 0xb5, 0x5b,
	0x6a, 0x55, 0x2d, 0x85, 0x0f, 0x39, 0x40, 0x7c, 0x0e, 0x50, 0xb6, 0xc4, 0x35, 0x15, 0xf5, 0x86,
	0x7c, 0x87, 0x07, 0x8c, 0x5d, 0x43, 0x48, 0x51, 0x92, 0x8b, 0x3b, 0x65, 0x3d, 0xc0, 0x4b, 0x18,
	0xe9, 0x5d, 0x43, 0xf3, 0xd1, 0x22, 0xc8, 0x4f, 0x97, 0x17, 0xbe, 0xca, 0x62, 0xff, 0x8e, 0xc5,
	0xae, 0x21, 0xe6, 0x34, 0xd9, 0xbf, 0x00, 0x92, 0x83, 0x09, 0xbe, 0x82, 0xb8, 0x4f, 0xf5, 0xe0,
	0x21, 0x86, 0xb0, 0xcc, 0x8f, 0xf1, 0x05, 0xc4, 0xb5, 0x68, 0x8c, 0xb6, 0xdd, 0x87, 0x79, 0xb2,
	0x4c, 0xee, 0x84, 0x2b, 0xc1, 0xfc, 0x08, 0x5f, 0xc2, 0xb1, 0x34, 0xda, 0xa9, 0x42, 0xa7, 0x9a,
	0xdc, 0xa9, 0xd6, 0x46, 0xb3, 0x61, 0x88, 0x6f, 0x60, 0x52, 0x1e, 0xd4, 0xeb, 0x92, 0x27, 0xcb,
	0x73, 0x2f, 0x3e, 0x6c, 0x9e, 0xdd, 0x13, 0xda, 0xea, 0x1a, 0xbe, 0xbb, 0x95, 0xbc, 0x9a, 0x47,
	0xfd, 0x8b, 0x79, 0x78, 0xf9, 0x37, 0x80, 0xd9, 0x83, 0x95, 0x71, 0x0c, 0xd1, 0x4a, 0x29, 0x43,
	0xe9, 0x13, 0x9c, 0x41, 0xe2, 0x8e, 0xdf, 0x9b, 0x8a, 0x6b, 0x4a, 0x03, 0x04, 0x88, 0xdf, 0x6b,
	0xb9, 0xa9, 0xcb, 0xf4, 0x08, 0x11, 0x4e, 0x3f, 0xde, 0x0c, 0xb7, 0xae, 0x44, 0xad, 0xd3, 0x10,
	0xcf, 0x61, 0xf6, 0xc9, 0xf0, 0x7b, 0xe4, 0xc8, 0x0a, 0xf7, 0xcc, 0x56, 0xfe, 0xa6, 0x34, 0xc2,
	0x33, 0x98, 0x0e, 0xdc, 0x37, 0x43, 0xed, 0x2e, 0x8d, 0x7f, 0xc6, 0x6e, 0x8f, 0xd7, 0xff, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xf7, 0x6f, 0xfe, 0x30, 0x4c, 0x03, 0x00, 0x00,
}
