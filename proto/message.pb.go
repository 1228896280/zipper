// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MsgType int32

const (
	MsgType_BC_GetBlocksMsg     MsgType = 0
	MsgType_BC_GetInvMsg        MsgType = 1
	MsgType_BC_GetDataMsg       MsgType = 2
	MsgType_BC_OnBlockMsg       MsgType = 3
	MsgType_BC_OnTransactionMsg MsgType = 4
)

var MsgType_name = map[int32]string{
	0: "BC_GetBlocksMsg",
	1: "BC_GetInvMsg",
	2: "BC_GetDataMsg",
	3: "BC_OnBlockMsg",
	4: "BC_OnTransactionMsg",
}
var MsgType_value = map[string]int32{
	"BC_GetBlocksMsg":     0,
	"BC_GetInvMsg":        1,
	"BC_GetDataMsg":       2,
	"BC_OnBlockMsg":       3,
	"BC_OnTransactionMsg": 4,
}

func (x MsgType) String() string {
	return proto1.EnumName(MsgType_name, int32(x))
}
func (MsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type InvType int32

const (
	InvType_block       InvType = 0
	InvType_transaction InvType = 1
)

var InvType_name = map[int32]string{
	0: "block",
	1: "transaction",
}
var InvType_value = map[string]int32{
	"block":       0,
	"transaction": 1,
}

func (x InvType) String() string {
	return proto1.EnumName(InvType_name, int32(x))
}
func (InvType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type GetBlocksMsg struct {
	Version       uint32   `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	LocatorHashes []string `protobuf:"bytes,2,rep,name=locatorHashes" json:"locatorHashes,omitempty"`
	HashStop      string   `protobuf:"bytes,3,opt,name=hashStop" json:"hashStop,omitempty"`
}

func (m *GetBlocksMsg) Reset()                    { *m = GetBlocksMsg{} }
func (m *GetBlocksMsg) String() string            { return proto1.CompactTextString(m) }
func (*GetBlocksMsg) ProtoMessage()               {}
func (*GetBlocksMsg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *GetBlocksMsg) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetBlocksMsg) GetLocatorHashes() []string {
	if m != nil {
		return m.LocatorHashes
	}
	return nil
}

func (m *GetBlocksMsg) GetHashStop() string {
	if m != nil {
		return m.HashStop
	}
	return ""
}

type GetInvMsg struct {
	Type  InvType  `protobuf:"varint,1,opt,name=type,enum=proto.InvType" json:"type,omitempty"`
	Hashs []string `protobuf:"bytes,2,rep,name=hashs" json:"hashs,omitempty"`
}

func (m *GetInvMsg) Reset()                    { *m = GetInvMsg{} }
func (m *GetInvMsg) String() string            { return proto1.CompactTextString(m) }
func (*GetInvMsg) ProtoMessage()               {}
func (*GetInvMsg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetInvMsg) GetType() InvType {
	if m != nil {
		return m.Type
	}
	return InvType_block
}

func (m *GetInvMsg) GetHashs() []string {
	if m != nil {
		return m.Hashs
	}
	return nil
}

type OnBlockMsg struct {
	Block *Block `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
}

func (m *OnBlockMsg) Reset()                    { *m = OnBlockMsg{} }
func (m *OnBlockMsg) String() string            { return proto1.CompactTextString(m) }
func (*OnBlockMsg) ProtoMessage()               {}
func (*OnBlockMsg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *OnBlockMsg) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type OnTransactionMsg struct {
	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
}

func (m *OnTransactionMsg) Reset()                    { *m = OnTransactionMsg{} }
func (m *OnTransactionMsg) String() string            { return proto1.CompactTextString(m) }
func (*OnTransactionMsg) ProtoMessage()               {}
func (*OnTransactionMsg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *OnTransactionMsg) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type GetDataMsg struct {
	InvList []*GetInvMsg `protobuf:"bytes,1,rep,name=InvList" json:"InvList,omitempty"`
}

func (m *GetDataMsg) Reset()                    { *m = GetDataMsg{} }
func (m *GetDataMsg) String() string            { return proto1.CompactTextString(m) }
func (*GetDataMsg) ProtoMessage()               {}
func (*GetDataMsg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *GetDataMsg) GetInvList() []*GetInvMsg {
	if m != nil {
		return m.InvList
	}
	return nil
}

func init() {
	proto1.RegisterType((*GetBlocksMsg)(nil), "proto.GetBlocksMsg")
	proto1.RegisterType((*GetInvMsg)(nil), "proto.GetInvMsg")
	proto1.RegisterType((*OnBlockMsg)(nil), "proto.OnBlockMsg")
	proto1.RegisterType((*OnTransactionMsg)(nil), "proto.OnTransactionMsg")
	proto1.RegisterType((*GetDataMsg)(nil), "proto.GetDataMsg")
	proto1.RegisterEnum("proto.MsgType", MsgType_name, MsgType_value)
	proto1.RegisterEnum("proto.InvType", InvType_name, InvType_value)
}

func init() { proto1.RegisterFile("message.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x50, 0xcd, 0x6b, 0xc2, 0x30,
	0x14, 0xb7, 0x56, 0xe7, 0xfa, 0x6a, 0x35, 0xc6, 0xc1, 0x8a, 0xa7, 0x52, 0x36, 0x28, 0x1e, 0x64,
	0xb8, 0x1d, 0x76, 0x76, 0x1b, 0x2a, 0x4c, 0x84, 0xcc, 0xfb, 0x88, 0x12, 0xd4, 0xcd, 0x25, 0xa5,
	0x09, 0x05, 0xff, 0xfb, 0x91, 0x0f, 0xb5, 0x9e, 0x42, 0x7e, 0xef, 0xfd, 0xbe, 0x1e, 0x44, 0x7f,
	0x4c, 0x4a, 0xba, 0x65, 0xa3, 0xbc, 0x10, 0x4a, 0xe0, 0xa6, 0x79, 0x06, 0xe1, 0xfa, 0x20, 0x36,
	0xbf, 0x16, 0x1b, 0xf4, 0x54, 0x41, 0xb9, 0xa4, 0x1b, 0xb5, 0x17, 0xdc, 0x42, 0xe9, 0x0f, 0xb4,
	0xa7, 0x4c, 0x4d, 0xf4, 0x92, 0x5c, 0xc8, 0x2d, 0x8e, 0xa1, 0x55, 0xb2, 0x42, 0xee, 0x05, 0x8f,
	0xbd, 0xc4, 0xcb, 0x22, 0x72, 0xfa, 0xe2, 0x07, 0x88, 0x0e, 0x62, 0x43, 0x95, 0x28, 0x66, 0x54,
	0xee, 0x98, 0x8c, 0xeb, 0x89, 0x9f, 0x05, 0xe4, 0x1a, 0xc4, 0x03, 0xb8, 0xdd, 0x51, 0xb9, 0xfb,
	0x52, 0x22, 0x8f, 0xfd, 0xc4, 0xcb, 0x02, 0x72, 0xfe, 0xa7, 0x1f, 0x10, 0x4c, 0x99, 0x9a, 0xf3,
	0x52, 0x1b, 0xa5, 0xd0, 0x50, 0xc7, 0x9c, 0x19, 0x97, 0xce, 0xb8, 0x63, 0xe3, 0x8c, 0xe6, 0xbc,
	0x5c, 0x1d, 0x73, 0x46, 0xcc, 0x0c, 0xdf, 0x41, 0x53, 0x93, 0x4f, 0x56, 0xf6, 0x93, 0x3e, 0x01,
	0x2c, 0xb9, 0x49, 0x6c, 0x75, 0x9a, 0xa6, 0xa2, 0x11, 0x0a, 0xc7, 0x6d, 0x27, 0x64, 0xe6, 0xc4,
	0x8e, 0xd2, 0x19, 0xa0, 0x25, 0x5f, 0x5d, 0xba, 0x6b, 0xde, 0x0b, 0x84, 0x95, 0x6b, 0x38, 0x36,
	0x76, 0xec, 0xca, 0x2e, 0xa9, 0xae, 0xa5, 0xaf, 0x00, 0x53, 0xa6, 0xde, 0xa9, 0xa2, 0x5a, 0x63,
	0x08, 0xad, 0x39, 0x2f, 0x3f, 0xf7, 0x52, 0xc5, 0x5e, 0xe2, 0x67, 0xe1, 0x18, 0x39, 0xfe, 0xb9,
	0x26, 0x39, 0x2d, 0x0c, 0x05, 0xb4, 0x16, 0x72, 0xab, 0xcb, 0xe1, 0x3e, 0x74, 0x27, 0x6f, 0xdf,
	0xd5, 0xb3, 0xa3, 0x1a, 0x46, 0xd0, 0xb6, 0xa0, 0x25, 0x22, 0x0f, 0xf7, 0x20, 0xb2, 0x88, 0xb3,
	0x43, 0x75, 0x07, 0x5d, 0xda, 0x23, 0x1f, 0xdf, 0x43, 0xdf, 0x40, 0xd7, 0xf5, 0x50, 0x63, 0xf8,
	0x68, 0xc2, 0x19, 0xc3, 0xc0, 0xdd, 0x08, 0xd5, 0x70, 0xf7, 0xaa, 0x36, 0xf2, 0xd6, 0x37, 0x26,
	0xf1, 0xf3, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xd4, 0xfe, 0x54, 0x3f, 0x02, 0x00, 0x00,
}
